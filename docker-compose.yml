
services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=${PUBLIC_API_URL}
    container_name: octopod-frontend
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=${PUBLIC_API_URL}
    depends_on:
      - backend
    networks:
      - octopod-network
    # Security improvements
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: octopod-backend
    restart: always
    ports:
      - "${BACKEND_PUBLIC_PORT:-3001}:3001"
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=${DB_USERNAME:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_DATABASE=octopod
      - DB_SYNC=true
    depends_on:
      - postgres
    networks:
      - octopod-network
    # Security improvements
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: 1G

  postgres:
    image: postgres:15-alpine
    container_name: octopod-postgres
    restart: always
    # Only expose PostgreSQL locally, not to the internet
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      - POSTGRES_USER=${DB_USERNAME:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_DB=octopod
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    privileged: true
    networks:
      - octopod-network

networks:
  octopod-network:
    driver: bridge

